/datum/admins/proc/force_knot() // By Stasdvrz
	set name = "Force Knot (Debug)"
	set category = "Debug"
	set hidden = TRUE

	if(!check_rights(R_ADMIN))
		to_chat(src, span_warning("‚ö† –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤."))
		return

	if(!check_rights(R_SPAWN))
		return

	var/mob/living/carbon/human/H = src
	if(!istype(H))
		to_chat(src, span_warning("‚ùå –≠—Ç–æ—Ç —Ç–µ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ª—é–¥–µ–π."))
		return

	var/obj/item/organ/genital/penis/P = H.getorganslot(ORGAN_SLOT_PENIS)
	var/list/modes = list()

	if(P)
		modes = list(
			"üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–∑–ª–∞" = "state",
			"üîí –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —É–∑–µ–ª (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)" = "lock",
			"üíß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –º—è–≥–∫–∏–π —Å–ø–∞–¥" = "release_soft",
			"üí• –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª–æ–≤–æ–π —Ä–∞–∑—Ä—ã–≤" = "release_force",
			"üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏" = "distance",
			"üß© Resist –æ—Ç —Å–µ–±—è" = "resist_self",
			"üß© Resist –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞" = "resist_partner",
			"üö∂ –°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ" = "simulate_move",
			"üß† –°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å resist (—Ä—É—á–Ω–æ–π)" = "simulate_resist",
			"‚è≥ –ê–≤—Ç–æ-resist —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥" = "auto_resist",
			"üßç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å–∞–∂–∏–≤–∞–Ω–∏–µ (–∂–µ–Ω—Å–∫–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)" = "female_test"
		)
	else
		modes = list("üßç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å–∞–∂–∏–≤–∞–Ω–∏–µ (–∂–µ–Ω—Å–∫–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)" = "female_test")

	var/mode = input(src, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", "Knot Debug") as null|anything in modes
	if(!mode)
		return

	switch(modes[mode])
		if("state")
			to_chat(src, span_notice("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–∑–ª–∞:"))
			to_chat(src, "- shape: [P?.shape]")
			to_chat(src, "- knot_size: [P?.knot_size]")
			to_chat(src, "- knot_locked: [P?.knot_locked]")
			to_chat(src, "- knot_strength: [P?.knot_strength]")
			to_chat(src, "- knot_until: [P?.knot_until ? "[P.knot_until - world.time] —Ç–∏–∫–æ–≤" : "–Ω–µ—Ç —Ç–∞–π–º–µ—Ä–∞"]")
			to_chat(src, "- knot_partner: [P?.knot_partner ? "[P.knot_partner]" : "–Ω–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞"]")
			if(HAS_TRAIT(H, TRAIT_ESTROUS_ACTIVE))
				to_chat(src, span_love("üíó –ê–∫—Ç–∏–≤–µ–Ω —ç—Å—Ç—Ä–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª"))
			else
				to_chat(src, span_notice("üßä –≠—Å—Ç—Ä–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"))
			if(hascall(H, "get_lust") && hascall(H, "get_climax_threshold"))
				to_chat(src, "- lust: [round((H.get_lust()/H.get_climax_threshold())*100,1)]%")
			return

		if("lock")
			var/list/L = list("—Ä–æ—Ç" = CUM_TARGET_MOUTH, "–∞–Ω—É—Å" = CUM_TARGET_ANUS, "–≤–ª–∞–≥–∞–ª–∏—â–µ" = CUM_TARGET_VAGINA)
			var/choice = input(src, "–ö—É–¥–∞ –∫–ª–∏–Ω–∏—Ç—å —É–∑–ª–æ–º?", "Knot test") as null|anything in L
			if(!choice)
				return
			var/zone = L[choice]

			var/list/moblist = list()
			for(var/mob/living/carbon/human/M in view(7, src))
				if(M != src)
					moblist += M

			var/mob/living/carbon/human/target = null
			var/fake_partner = FALSE

			if(length(moblist))
				target = input(src, "–í—ã–±–µ—Ä–∏ —Ü–µ–ª—å –¥–ª—è —É–∑–ª–∞:", "Knot test") as null|anything in moblist

			if(!target)
				to_chat(src, span_warning("‚öôÔ∏è –¶–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ ‚Äî —Å–æ–∑–¥–∞—ë—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π."))
				target = src
				fake_partner = TRUE

			P.knot_locked = TRUE
			P.knot_partner = target
			P.knot_state = zone
			P.knot_until = world.time + 60 SECONDS

			// –ø–æ–¥–∫–ª—é—á–∞–µ–º –ø–æ–≤–æ–¥–∫–æ–≤—É—é –º–µ—Ö–∞–Ω–∏–∫—É
			var/mob/living/master = H
			var/mob/living/pet = target
			if(!pet.has_movespeed_modifier(/datum/movespeed_modifier/leash))
				pet.add_movespeed_modifier(/datum/movespeed_modifier/leash)

			// —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
			P.RegisterSignal(master, COMSIG_MOVABLE_MOVED, TYPE_PROC_REF(/obj/item/organ/genital/penis, on_knot_move))
			P.RegisterSignal(pet, COMSIG_MOVABLE_MOVED, TYPE_PROC_REF(/obj/item/organ/genital/penis, on_knot_move))


			to_chat(src, span_love("‚úÖ –£–∑–µ–ª –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (—Ü–µ–ª—å: [target], –∑–æ–Ω–∞: [choice]) –Ω–∞ 60 —Å–µ–∫—É–Ω–¥."))
			to_chat(src, span_notice("üìé –ü–æ–≤–æ–¥–æ–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω ‚Äî –¥–≤–∏–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è."))

			// üíû –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è (–¥–ª—è –¥–µ–±–∞–≥–∞)
			if(istype(P, /obj/item/organ/genital/penis))
				to_chat(src, span_love("<font color='#ff7ff5'><b>[DEBUG]</b> –ó–∞–ø—É—Å–∫ –∞—Ñ—Ä–æ–¥–∏–∑–∏–∞—á–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ —É–∑–ª–∞...</font>"))
				P.knot_arousal_tick(H, target)

			// üí¨ –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
			if(fake_partner)
				to_chat(src, span_love("<font color='#ff7ff5'><b>[DEBUG]</b> –°–∏–º—É–ª—è—Ü–∏—è: –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å –∂–µ.</font>"))
				to_chat(src, span_lewd("<b>(–ü–∞—Ä—Ç–Ω—ë—Ä)</b> –¢—ã –æ—â—É—â–∞–µ—à—å, –∫–∞–∫ —É–∑–µ–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã—Ö–æ–¥ –∏ –ø—É–ª—å—Å–∏—Ä—É–µ—Ç –≤–Ω—É—Ç—Ä–∏..."))
			else
				to_chat(target, span_love("<font color='#ff7ff5'><b>–£–∑–µ–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã—Ö–æ–¥ ‚Äî –≤—ã —Å–æ–µ–¥–∏–Ω–µ–Ω—ã —Å [src]!</b></font>"))

			// –ø–ª–∞–Ω–∏—Ä—É–µ–º —Ç–∞–π–º–µ—Ä—ã
			addtimer(CALLBACK(P, TYPE_PROC_REF(/obj/item/organ/genital/penis, knot_distance_loop), H), 5 SECONDS)
			addtimer(CALLBACK(P, TYPE_PROC_REF(/obj/item/organ/genital/penis, release_knot), H, target, zone, FALSE), 60 SECONDS)

		if("release_soft")
			var/zone = P.knot_state ? P.knot_state : CUM_TARGET_VAGINA
			P.release_knot(H, P.knot_partner ? P.knot_partner : H, zone, FALSE)
			to_chat(src, span_notice("üíß –ú—è–≥–∫–∏–π —Å–ø–∞–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω."))

		if("release_force")
			var/zone = P.knot_state ? P.knot_state : CUM_TARGET_VAGINA
			P.release_knot(H, P.knot_partner ? P.knot_partner : H, zone, TRUE)
			to_chat(src, span_danger("üí• –°–∏–ª–æ–≤–æ–π —Ä–∞–∑—Ä—ã–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω."))

		if("distance")
			H.check_knot_distance()
			to_chat(src, span_notice("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞."))

		if("resist_self")
			P.start_resist_attempt(H)
			to_chat(src, span_notice("üß© Resist –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –æ—Ç —Å–≤–æ–µ–≥–æ –ª–∏—Ü–∞."))

		if("resist_partner")
			if(P.knot_partner && ishuman(P.knot_partner))
				var/mob/living/carbon/human/partner = P.knot_partner
				P.start_resist_attempt(partner)
				to_chat(src, span_notice("üß© Resist –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –æ—Ç –ª–∏—Ü–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞."))

		if("simulate_move")
			to_chat(src, span_notice("üö∂ –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ..."))
			if(P.knot_locked && P.knot_partner)
				H.check_knot_distance()
				to_chat(src, span_notice("üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ç—è–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞."))
			else
				to_chat(src, span_warning("‚ùå –£–∑–µ–ª –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –∏–ª–∏ –Ω–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞."))

		if("simulate_resist")
			if(!P.knot_locked)
				to_chat(src, span_warning("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É–∑–ª–∞ –¥–ª—è resist."))
				return
			to_chat(src, span_notice("üß© –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ resist..."))
			P.start_resist_attempt(src)

		if("auto_resist")
			if(!P.knot_locked)
				to_chat(src, span_warning("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É–∑–ª–∞ –¥–ª—è resist."))
				return
			to_chat(src, span_notice("‚è≥ Resist —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥..."))
			addtimer(CALLBACK(P, TYPE_PROC_REF(/obj/item/organ/genital/penis, start_resist_attempt), src), 5 SECONDS)

		if("female_test")
			var/list/moblist = list()
			for(var/mob/living/carbon/human/M in view(7, src))
				if(M != src)
					var/obj/item/organ/genital/penis/Ptest = M.getorganslot(ORGAN_SLOT_PENIS)
					if(Ptest && !Ptest.knot_locked)
						moblist += M

			if(!length(moblist))
				to_chat(src, span_warning("‚ùå –†—è–¥–æ–º –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ (–æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π —á–ª–µ–Ω–∞ –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É–∑–ª–∞)."))
				return

			var/mob/living/carbon/human/target = input(src, "–í—ã–±–µ—Ä–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ (–æ–±–ª–∞–¥–∞—Ç–µ–ª—è —á–ª–µ–Ω–∞):", "Knot test") as null|anything in moblist
			if(!target)
				return

			var/list/L = list("—Ä–æ—Ç" = CUM_TARGET_MOUTH, "–∞–Ω—É—Å" = CUM_TARGET_ANUS, "–≤–ª–∞–≥–∞–ª–∏—â–µ" = CUM_TARGET_VAGINA)
			var/choice = input(src, "–ö—É–¥–∞ –Ω–∞—Å–∞–∂–∏–≤–∞–µ—à—å—Å—è?", "Knot test") as null|anything in L
			if(!choice)
				return

			var/zone = L[choice]

			to_chat(src, span_notice("üî¨ –¢–µ—Å—Ç: —Å–∏–º—É–ª—è—Ü–∏—è —É–∑–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç –∂–µ–Ω—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã..."))
			try_apply_knot(src, target, zone, TRUE)
			to_chat(src, span_love("üíû –¢—ã –Ω–∞—Å–∞–∂–∏–≤–∞–µ—à—å—Å—è –Ω–∞ [target]. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–∑–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞."))
