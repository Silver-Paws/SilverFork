// ============================================================
// BlueMoon - Knotting core (standalone) //By Stasdvrz
// ============================================================
#include "bm_knotting_defines.dm"

/mob/living
	var/tmp/knot_resist_cd_until = 0   // –∞–Ω—Ç–∏—Å–ø–∞–º –¥–ª—è Resist
	//var/tmp/knot_action_cd_until = 0   // –∞–Ω—Ç–∏—Å–ø–∞–º –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ –∑–∞—É–∑–ª–∏—Ç—å—Å—è (–Ω–æ–≤—ã–π –≤–µ—Ä–±)


/obj/item/organ/genital/penis
	// 0 ‚Äî –Ω–µ—Ç —É–∑–ª–∞; 1 ‚Äî –æ–±—ã—á–Ω—ã–π —É–∑–µ–ª; 2 ‚Äî ¬´hemi¬ª/—É—Å–∏–ª–µ–Ω–Ω—ã–π
	var/knot_size = 0
	var/knot_locked = FALSE
	var/knot_until = 0      // world.time, –∫–æ–≥–¥–∞ —Å–ø–∞–¥—ë—Ç
	var/knot_strength = 1   // –Ω–∞ –±—É–¥—É—â–µ–µ
	var/knot_state = 0
	var/mob/living/knot_partner = null
	var/last_knot_check = 0

/obj/item/organ/genital/penis/Initialize(mapload)
	. = ..()
	update_knotting_from_shape()

/obj/item/organ/genital/penis/update_appearance()
	. = ..()
	update_knotting_from_shape()

/obj/item/organ/genital/penis/proc/update_knotting_from_shape()
	var/datum/sprite_accessory/S = GLOB.cock_shapes_list[shape]
	var/state = lowertext(S ? S.icon_state : "[shape]")

	// Taur shape check
	var/tauric_shape = FALSE
	var/datum/sprite_accessory/taur/T = GLOB.taur_list[src.owner?.dna.features["taur"]]
	if(istype(T))
		tauric_shape = T.taur_mode && S.accepted_taurs

	if(tauric_shape || state == "hemiknot" || state == "barbedhemiknot")
		knot_size = 2
	else if(state == "knotted" || state == "barbknot")
		knot_size = 1
	else
		knot_size = 0

/obj/item/organ/genital/penis/proc/can_pull_out()
	return !knot_locked


// ============================================================
// üîó –û—Å–Ω–æ–≤–Ω–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞ —É–∑–ª–∞
// ============================================================

/obj/item/organ/genital/penis/proc/do_knotting(mob/living/user, mob/living/partner, target_zone)
	if(!knot_size || knot_locked || !user || !partner)
		return FALSE

	// üî• –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è
	if(ishuman(user))
		var/mob/living/carbon/human/HU = user
		if(!HU.lust || HU.lust < 60)
			return FALSE

	// –±–∞–∑–æ–≤—ã–π —à–∞–Ω—Å
	var/knot_chance = 20 + (knot_size * 8) + (knot_strength * 4)

	// –≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –æ—Ä–≥–∞–Ω—ã
	var/total_genitals = 0
	var/aroused_genitals = 0
	if(ishuman(user))
		var/mob/living/carbon/human/H = user
		for(var/obj/item/organ/genital/G in H.internal_organs)
			if(G.genital_flags & GENITAL_CAN_AROUSE)
				total_genitals++
				if(G.aroused_state)
					aroused_genitals++
	var/arousal_ratio = (total_genitals > 0) ? (aroused_genitals / total_genitals) : 0
	if(arousal_ratio >= 0.8)
		knot_chance += round(20 * ((arousal_ratio - 0.8) / 0.2))

	// —ç—Å—Ç—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å
	if(HAS_TRAIT(partner, TRAIT_ESTROUS_ACTIVE))
		knot_chance += 10
		to_chat(user, span_love("–¢–µ–ª–æ [partner] –æ—Ç–∑—ã–≤—á–∏–≤–µ–µ –∏–∑-–∑–∞ —ç—Å—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞."))

	knot_chance = clamp(knot_chance, 0, KNOTTING_MAX_CHANCE)

	// –∑–æ–Ω–∞ –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
	var/zone_text = ""
	var/duration_min = 600 SECONDS
	var/duration_max = 900 SECONDS
	if(target_zone == CUM_TARGET_VAGINA)
		if(!partner.has_vagina()) return FALSE
		zone_text = "–≤–ª–∞–≥–∞–ª–∏—â–µ"
		knot_chance += 10
	else if(target_zone == CUM_TARGET_ANUS)
		if(!partner.has_anus()) return FALSE
		zone_text = "–∞–Ω—É—Å"
		knot_chance -= 5
		duration_min *= 0.8
		duration_max *= 0.9
	else if(target_zone == CUM_TARGET_MOUTH)
		if(!partner.has_mouth()) return FALSE
		zone_text = "—Ä–æ—Ç"
		knot_chance -= 15
		duration_min *= 0.1
		duration_max *= 0.2
	else
		return FALSE

	// üö´ –£ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω —É–∑–µ–ª
	if(ishuman(partner))
		var/mob/living/carbon/human/Hp = partner
		for(var/obj/item/organ/genital/penis/otherP in Hp.internal_organs)
			if(otherP.knot_locked && otherP.knot_state == target_zone)
				knot_chance = 0
				break

	if(!prob(knot_chance))
		return FALSE

	// === –∞–∫—Ç–∏–≤–∞—Ü–∏—è —É–∑–ª–∞ ===
	knot_locked = TRUE
	knot_partner = partner
	knot_state = target_zone
	var/dur = rand(duration_min, duration_max)
	knot_until = world.time + dur

	// –ø–æ–≤–æ–¥–∫–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞
	if(istype(user, /mob/living) && istype(partner, /mob/living))
		var/mob/living/master = user
		var/mob/living/pet = partner
		if(!pet.has_movespeed_modifier(/datum/movespeed_modifier/leash))
			pet.add_movespeed_modifier(/datum/movespeed_modifier/leash)
		RegisterSignal(master, COMSIG_MOVABLE_MOVED, PROC_REF(on_knot_move), TRUE)
		RegisterSignal(pet, COMSIG_MOVABLE_MOVED, PROC_REF(on_knot_move), TRUE)

	// –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ
	visible_message(list(user, partner),
		span_love("<b>[user]</b> –∑–∞—Å—Ç—Ä–µ–≤–∞–µ—Ç —É–∑–ª–æ–º –≤ [zone_text] <b>[partner]</b>!"),
		span_love("–¢–≤–æ–π —É–∑–µ–ª –Ω–∞–±—É—Ö–∞–µ—Ç –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ [partner].")
	)

	// üí≠ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π mood
	if(ishuman(user))
		SEND_SIGNAL(user, COMSIG_ADD_MOOD_EVENT, "knotting_satisfied", /datum/mood_event/knotting_satisfied)
	if(ishuman(partner))
		SEND_SIGNAL(partner, COMSIG_ADD_MOOD_EVENT, "knotting_linked", /datum/mood_event/knotting_linked)

	// –ê—Ñ—Ä–æ–¥–∏–∑–∏–∞—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ —É–∑–ª–∏—Ä–æ–≤–∞–Ω–∏–∏
	for(var/mob/living/M in list(user, partner))
		if(!M?.client?.prefs?.arousable || (M.client?.prefs?.cit_toggles & NO_APHRO))
			continue

		// —Å–ª—É—á–∞–π–Ω—ã–µ —Å—Ç–æ–Ω—ã / —ç–º–æ—É—Ç—ã
		if(prob(10))
			if(prob(50))
				M.say(pick("–û—Ö-–º—Ö—Ö...", "–ê—Ö—Ö-—Ä...", "–ê–º—Ä—Ñ–ø—Ñ...", "–ú—Ä—Ä-–∞—Ö...", "–ê–∞–∞—Ö...", "–ú–Ω—Ö...", "–ú–º–º..."))
			else
				M.emote(pick("moan", "blush", "pant"))

		// —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã
		if(prob(15))
			var/msg = pick("–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ –≤—Å—ë –≤–Ω—É—Ç—Ä–∏ –≥–æ—Ä–∏—Ç –æ—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è...", "–ö–∞–∂–¥–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —É–∑–ª–∞ —É—Å–∏–ª–∏–≤–∞–µ—Ç —Ç–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ...", "–¢–≤–æ—ë —Ç–µ–ª–æ –æ—Ç–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–∂–¥—É—é –ø—É–ª—å—Å–∞—Ü–∏—é...")
			to_chat(M, span_love(msg))

		// —É—Å–∏–ª–µ–Ω–∏–µ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è
		if(ishuman(M))
			var/mob/living/carbon/human/HM = M
			HM.adjust_arousal(100, "knotting", aphro = TRUE)

		var/climax_threshold = hascall(M, "get_climax_threshold") ? M.get_climax_threshold() : 100
		if(M.lust / climax_threshold < 0.65)
			M.add_lust(NORMAL_LUST)

		REMOVE_TRAIT(M, TRAIT_NEVERBONER, "KNOT_AROUSAL")


	// ‚ö° –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ —É—Å–∏–ª–µ–Ω–∏–µ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è (–∞–≤—Ç–æ-—Å—Ç–∏–º—É–ª—è—Ü–∏—è —É–∑–ª–∞)
	addtimer(CALLBACK(src, PROC_REF(knot_arousal_tick), user, partner), 4 SECONDS)

	// –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	var/list/messages = list()
	switch(target_zone)
		if(CUM_TARGET_VAGINA)
			messages = list(
				"–£–∑–µ–ª —Ä–∞—Å–ø—É—Ö–∞–µ—Ç –≤ —Å–∞–º–æ–π –≥–ª—É–±–∏–Ω–µ, –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—è –≤—ã—Ö–æ–¥...",
				"–¢—ã –æ—â—É—â–∞–µ—à—å, –∫–∞–∫ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è –ø—É–ª—å—Å–∏—Ä—É–µ—Ç –∑–∞–ø–∏—Ä–∞—é—â–∏–π —É–∑–µ–ª...",
				"–¢–µ—Å–Ω–æ–µ —Ç–µ–ø–ª–æ –≤–Ω—É—Ç—Ä–∏ –Ω–µ –æ—Ç–ø—É—Å–∫–∞–µ—Ç ‚Äî —É–∑–µ–ª –¥–µ—Ä–∂–∏—Ç –∫—Ä–µ–ø–∫–æ..."
			)
		if(CUM_TARGET_ANUS)
			messages = list(
				"–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Ç—É–≥–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ ‚Äî —É–∑–µ–ª –Ω–µ –¥–∞—ë—Ç –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è...",
				"–ü—É–ª—å—Å–∞—Ü–∏–∏ –≥–ª—É–±–æ–∫–æ –≤–Ω—É—Ç—Ä–∏ —Å–¥–∞–≤–ª–∏–≤–∞—é—Ç —Ç–µ–±—è –∏–∑–Ω—É—Ç—Ä–∏...",
				"–ì–æ—Ä—è—á–∏–µ –≤–æ–ª–Ω—ã —É–ø–∏—Ä–∞—é—Ç—Å—è –≤ —É–∑–µ–ª, –Ω–µ –Ω–∞—Ö–æ–¥—è –≤—ã—Ö–æ–¥–∞..."
			)
		if(CUM_TARGET_MOUTH)
			messages = list(
				"–£–∑–µ–ª —Ä–∞—Å–ø—É—Ö–∞–µ—Ç —É —Ç–µ–±—è –≤–æ —Ä—Ç—É, –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—è –ø—É—Ç—å –Ω–∞—Ä—É–∂—É...",
				"–¢–≤–æ–π —Ä–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω, —É–∑–µ–ª –Ω–µ –¥–∞—ë—Ç –æ—Ç–æ–¥–≤–∏–Ω—É—Ç—å—Å—è...",
				"–ö–∞–∂–¥–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è —É–∑–ª–∞ –æ—â—É—â–∞–µ—Ç—Å—è —Å –∫–∞–∂–¥—ã–º –≤–¥–æ—Ö–æ–º..."
			)
		else
			messages = list("–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —É–∑–µ–ª –ø—É–ª—å—Å–∏—Ä—É–µ—Ç –≤–Ω—É—Ç—Ä–∏, —Å–æ–µ–¥–∏–Ω—è—è –≤–∞—Å –∫—Ä–µ–ø—á–µ...")

	to_chat(partner, span_love("<font color='#ff7ff5'><b>–£–∑–µ–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã—Ö–æ–¥ ‚Äî –≤—ã —Å–æ–µ–¥–∏–Ω–µ–Ω—ã —Å [user]!</b></font>"))
	to_chat(partner, span_love("[pick(messages)]"))

	// –≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —É–∑–ª–æ–≤–∫–µ
	if(ishuman(user))
		var/mob/living/carbon/human/HU2 = user
		HU2.handle_post_sex(NORMAL_LUST, null, partner)
	if(ishuman(partner))
		var/mob/living/carbon/human/HP = partner
		HP.handle_post_sex(NORMAL_LUST, null, user)

	addtimer(CALLBACK(src, PROC_REF(release_knot), user, partner, target_zone, FALSE), dur)
	addtimer(CALLBACK(src, PROC_REF(knot_distance_loop), user), 5 SECONDS)
	return TRUE


// üîÅ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è —ç—Ñ—Ñ–µ–∫—Ç –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è, –ø–æ–∫–∞ —É–∑–µ–ª –∞–∫—Ç–∏–≤–µ–Ω
/obj/item/organ/genital/penis/proc/knot_arousal_tick(mob/living/user, mob/living/partner)
	if(QDELETED(src) || !knot_locked || QDELETED(user) || QDELETED(partner))
		return // —É–∑–µ–ª —Å–Ω—è—Ç, –≤—ã—Ö–æ–¥–∏–º

	for(var/mob/living/M in list(user, partner))
		if(!M?.client?.prefs?.arousable)
			continue
		M.add_lust(rand(30, 40))
		if(prob(8))
			M.emote(pick("moan","pant","blush"))

	// –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º, –ø–æ–∫–∞ –∞–∫—Ç–∏–≤–µ–Ω —É–∑–µ–ª
	addtimer(CALLBACK(src, PROC_REF(knot_arousal_tick), user, partner), 5 SECONDS)

// ============================================================
//  Release: –º—è–≥–∫–∏–π —Å–ø–∞–¥ –∏ —Å–∏–ª–æ–≤–æ–π —Ä–∞–∑—Ä—ã–≤
// ============================================================

/obj/item/organ/genital/penis/proc/release_knot(mob/living/user, mob/living/partner, target_zone, forceful = FALSE)
	if(!knot_locked)
		return

	// —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–æ –∑–∞–Ω—É–ª–µ–Ω–∏—è
	var/mob/living/Luser = user
	var/mob/living/Lpartner = partner

	// —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–∑–ª–∞
	knot_locked = FALSE
	knot_state  = 0
	knot_partner = null
	knot_until  = 0

	var/zone_text = "—Ç–µ–ª–∞"
	switch(target_zone)
		if(CUM_TARGET_VAGINA) zone_text = "–≤–ª–∞–≥–∞–ª–∏—â–∞"
		if(CUM_TARGET_ANUS)   zone_text = "–∞–Ω—É—Å–∞"
		if(CUM_TARGET_MOUTH, CUM_TARGET_THROAT) zone_text = "—Ä—Ç–∞"

	if(forceful)
		//  –°–∏–ª–æ–≤–æ–π —Ä–∞–∑—Ä—ã–≤
		playsound(get_turf(Luser), 'sound/effects/snap01.ogg', 100, TRUE)
		Luser.visible_message(
			span_danger(" –£–∑–µ–ª [Luser] —Å —Å–∏–ª–æ–π –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è –∏–∑ [zone_text] [Lpartner]!"),
			span_warning("–¢—ã —Ä–µ–∑–∫–æ –≤—ã–¥—ë—Ä–≥–∏–≤–∞–µ—à—å —É–∑–µ–ª –∏–∑ [Lpartner]! –≠—Ç–æ –±–æ–ª—å–Ω–æ –æ–±–æ–∏–º.")
		)
		to_chat(Lpartner, span_userdanger("–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Ä–µ–∑–∫—É—é –±–æ–ª—å, –∫–æ–≥–¥–∞ —É–∑–µ–ª [Luser] —Ä–≤—ë—Ç—Å—è!"))
		Lpartner.emote("scream")

		if(istype(Lpartner, /mob/living))
			Lpartner.Stun(40)
			if(prob(40))
				to_chat(Lpartner, span_danger(" –£–∑–µ–ª –≤—ã—Ä–≤–∞–ª—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ, –æ—Å—Ç–∞–≤–∏–≤ –±–æ–ª—å."))
	else
		//  –ú—è–≥–∫–∏–π —Å–ø–∞–¥
		playsound(get_turf(Luser), 'sound/effects/snap01.ogg', 50, 1)
		Luser.visible_message(
			span_lewd(" –£–∑–µ–ª [Luser] –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Å–ø–∞–¥–∞–µ—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞—è [Lpartner] –∏–∑ [zone_text]."),
			span_love("–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —É–∑–µ–ª —Å–ø–∞–¥–∞–µ—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞—è [Lpartner].")
		)
		to_chat(Lpartner, span_lewd("<font color='#ee6bee'>–¢—ã –æ—â—É—â–∞–µ—à—å, –∫–∞–∫ —É–∑–µ–ª [Luser] –º—è–≥–∫–æ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ç–≤–æ–µ–≥–æ [zone_text].</font>"))
		if(prob(25)) Lpartner.emote("moan")

	// üí≠ –æ—á–∏—â–∞–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–µ—Å–ª–∏ –±—ã–ª–∏)
	if(ishuman(Luser))
		SEND_SIGNAL(Luser, COMSIG_CLEAR_MOOD_EVENT, "knotting_satisfied")
		SEND_SIGNAL(Luser, COMSIG_CLEAR_MOOD_EVENT, "knotting_linked")
	if(ishuman(Lpartner))
		SEND_SIGNAL(Lpartner, COMSIG_CLEAR_MOOD_EVENT, "knotting_satisfied")
		SEND_SIGNAL(Lpartner, COMSIG_CLEAR_MOOD_EVENT, "knotting_linked")

	// FIX: –Ω–µ–≥–∞—Ç–∏–≤ –¥–æ–±–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –ø—Ä–∏ —Å–∏–ª–æ–≤–æ–º —Ä–∞–∑—Ä—ã–≤–µ.
	// –ü—Ä–∏ –º—è–≥–∫–æ–º ‚Äî –º–æ–∂–Ω–æ –¥–∞—Ç—å ¬´–æ–±–ª–µ–≥—á–µ–Ω–∏–µ¬ª, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Ç–∞–∫–æ–π datum; –∏–Ω–∞—á–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–∞—ë–º.
	if(forceful)
		if(ishuman(Luser))
			SEND_SIGNAL(Luser, COMSIG_ADD_MOOD_EVENT, "knotting_painful", /datum/mood_event/knotting_painful)
		if(ishuman(Lpartner))
			SEND_SIGNAL(Lpartner, COMSIG_ADD_MOOD_EVENT, "knotting_painful", /datum/mood_event/knotting_painful)
	else

		if(ishuman(Luser))
			SEND_SIGNAL(Luser, COMSIG_ADD_MOOD_EVENT, "knotting_satisfied", /datum/mood_event/knotting_satisfied)
		if(ishuman(Lpartner))
			SEND_SIGNAL(Lpartner, COMSIG_ADD_MOOD_EVENT, "knotting_linked", /datum/mood_event/knotting_linked)

	// FIX: —Å–Ω–∏–º–∞–µ–º ¬´–ø–æ–≤–æ–¥–æ–∫¬ª –∏ –æ—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–∏–≥–Ω–∞–ª–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è partner –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞,
	// –∞ –Ω–µ –∑–∞–Ω—É–ª—ë–Ω–Ω—ã–π knot_partner.
	if(istype(Lpartner, /mob/living))
		if(Lpartner.has_movespeed_modifier(/datum/movespeed_modifier/leash))
			Lpartner.remove_movespeed_modifier(/datum/movespeed_modifier/leash)

	if(istype(Luser, /mob/living))
		UnregisterSignal(Luser, COMSIG_MOVABLE_MOVED)
	if(istype(Lpartner, /mob/living))
		UnregisterSignal(Lpartner, COMSIG_MOVABLE_MOVED)


// ============================================================
// üîÅ –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ (‚â§1 —Ç–∞–π–ª) ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ü–∏–∫–ª
// ============================================================

/obj/item/organ/genital/penis/proc/knot_distance_loop(mob/living/who)
	// –æ—Ä–≥–∞–Ω –∏–ª–∏ –ø–∞—Ä—Ç–Ω—ë—Ä —É–¥–∞–ª–µ–Ω—ã / —É–∑–µ–ª —É–∂–µ —Å–Ω—è—Ç ‚Äî –≤—ã—Ö–æ–¥–∏–º –±–µ–∑ –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏
	if(QDELETED(src) || !knot_locked || QDELETED(knot_partner))
		return

	// –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∏, –±–µ—Ä—ë–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ä–≥–∞–Ω–∞
	if(!who && ismob(owner))
		who = owner

	// —Å—Ç—Ä–∞—Ö—É–µ–º—Å—è –æ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞
	if(istype(who))
		// —ç—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ /mob/living ‚Äî —Ç–∞–º —É–∂–µ –∑–∞—â–∏—Ç–∞ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é —É–∑–ª–∞
		who.check_knot_distance()

	// –µ—Å–ª–∏ —É–∑–µ–ª –≤—Å—ë –µ—â—ë –∞–∫—Ç–∏–≤–µ–Ω ‚Äî –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä—É–µ–º —Ü–∏–∫–ª
	if(!QDELETED(src) && knot_locked && !QDELETED(knot_partner))
		addtimer(CALLBACK(src, PROC_REF(knot_distance_loop), who), 5 SECONDS)



// ============================================================
// üö∑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
// ============================================================

/mob/living/var/tmp/in_knot_check = FALSE

/mob/living/proc/check_knot_distance()
	// ‚ö†Ô∏è –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã
	if(in_knot_check)
		return
	in_knot_check = TRUE

	var/obj/item/organ/genital/penis/P = getorganslot(ORGAN_SLOT_PENIS)
	if(!P || !P.knot_locked || !P.knot_partner)
		in_knot_check = FALSE
		return

	var/mob/living/partner = P.knot_partner
	if(!istype(partner))
		in_knot_check = FALSE
		return

	var/dist = get_dist(src, partner)
	if(dist <= 1)
		in_knot_check = FALSE
		return

	var/zone_text = "—Ç–µ–ª–∞"
	switch(P.knot_state)
		if(CUM_TARGET_VAGINA) zone_text = "–≤–ª–∞–≥–∞–ª–∏—â–∞"
		if(CUM_TARGET_ANUS) zone_text = "–∞–Ω—É—Å–∞"
		if(CUM_TARGET_MOUTH, CUM_TARGET_THROAT) zone_text = "—Ä—Ç–∞"

	to_chat(src, span_warning(" –£–∑–µ–ª –±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ –Ω–∞—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –≤ –æ–±–ª–∞—Å—Ç–∏ [zone_text]!"))
	to_chat(partner, span_danger(" –¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —É–∑–µ–ª –≤–Ω—É—Ç—Ä–∏ —Ç–≤–æ–µ–≥–æ [zone_text] –Ω–∞—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –∏ –ø—Ä–∏—á–∏–Ω—è–µ—Ç –±–æ–ª—å!"))

	visible_message(
		list(src, partner),
		span_danger(" –ú–µ–∂–¥—É [src] –∏ [partner] –Ω–∞—Ç—è–Ω—É–ª—Å—è —É–∑–µ–ª ‚Äî —Å–≤—è–∑—å –≤–æ—Ç-–≤–æ—Ç –ø–æ—Ä–≤—ë—Ç—Å—è!"),
		span_notice("–¢—ã –æ—â—É—â–∞–µ—à—å —Å–∏–ª—å–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –º–µ–∂–¥—É –Ω–∏–º–∏...")
	)

	//  80% —à–∞–Ω—Å –Ω–∞ —Å–∏–ª–æ–≤–æ–π —Ä–∞–∑—Ä—ã–≤
	if(prob(80))
		var/zone = P.knot_state ? P.knot_state : CUM_TARGET_VAGINA
		P.release_knot(src, partner, zone, TRUE)
		to_chat(src, span_danger(" –£–∑–µ–ª –Ω–µ –≤—ã–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏ —Ä–µ–∑–∫–æ –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è!"))
		to_chat(partner, span_userdanger(" –£–∑–µ–ª —Ä–µ–∑–∫–æ –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ç–≤–æ–µ–≥–æ [zone_text]!"))
	else
		to_chat(src, span_warning("–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —É–∑–µ–ª –≤–æ—Ç-–≤–æ—Ç —Å–æ—Ä–≤—ë—Ç—Å—è..."))

	// ‚úÖ –î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî –≤—ã–∑—ã–≤–∞–µ–º —É –ø–∞—Ä—Ç–Ω—ë—Ä–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
	if(!partner.in_knot_check && istype(partner, /mob/living))
		partner.check_knot_distance()

	in_knot_check = FALSE

/obj/item/organ/genital/penis/proc/on_knot_move()
	SIGNAL_HANDLER

	if(QDELETED(src) || !knot_locked || QDELETED(knot_partner))
		UnregisterSignal(owner, COMSIG_MOVABLE_MOVED)
		if(istype(knot_partner, /mob/living))
			UnregisterSignal(knot_partner, COMSIG_MOVABLE_MOVED)
		return

	var/mob/living/user = owner
	if(!user || !knot_partner || !knot_locked)
		return

	var/mob/living/partner = knot_partner
	if(QDELETED(user) || QDELETED(partner))
		return

	var/dist = get_dist(user, partner)
	if(dist <= 1)
		return

	// üîÅ –ê–Ω—Ç–∏—Å–ø–∞–º –ø—Ä–æ–≤–µ—Ä–∫–∞ (–Ω–µ —á–∞—â–µ —Ä–∞–∑–∞ –≤ —Å–µ–∫—É–Ω–¥—É)
	if(!src.last_knot_check)
		src.last_knot_check = 0
	if(world.time < src.last_knot_check + 10)
		return
	src.last_knot_check = world.time

	// ‚ö†Ô∏è –ï—Å–ª–∏ –æ–Ω–∏ –Ω–µ–º–Ω–æ–≥–æ –Ω–∞—Ç—è–Ω—É–ª–∏ —É–∑–µ–ª
	if(dist == 2)
		to_chat(user, span_warning(" –£–∑–µ–ª –Ω–∞—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –º–µ–∂–¥—É —Ç–æ–±–æ–π –∏ [partner]!"))
		to_chat(partner, span_danger(" –¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —É–∑–µ–ª –≤–Ω—É—Ç—Ä–∏ –Ω–∞—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –∏ –ø—Ä–∏—á–∏–Ω—è–µ—Ç –±–æ–ª—å!"))

		if(prob(25))
			partner.emote("whimper")

		// üí¢ –£—Ä–æ–Ω –æ—Ç –Ω–∞—Ç—è–∂–µ–Ω–∏—è
		var/stam_damage = rand(5, 10)
		var/brute_damage = rand(1, 3)
		user.apply_damage(stam_damage * 2, STAMINA)     // –¥–µ—Ä–∂–∞—Ç–µ–ª—å —É–∑–ª–∞ —Å—Ç—Ä–∞–¥–∞–µ—Ç —Å–∏–ª—å–Ω–µ–µ
		user.apply_damage(brute_damage * 2, BRUTE)
		partner.apply_damage(stam_damage, STAMINA)
		partner.apply_damage(brute_damage, BRUTE)

		// üî∏ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–≥–æ "–æ–≥–ª—É—à–µ–Ω–∏—è" –ø—Ä–∏ –±–æ–ª–∏
		if(prob(20))
			partner.Stun(10)
			if(prob(10))
				user.Stun(15)

		// üîπ –ú–∞–ª—ã–π —à–∞–Ω—Å —Å–∞–º–æ–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ä–∞–∑—Ä—ã–≤–∞
		if(prob(10))
			to_chat(user, span_danger(" –£–∑–µ–ª –Ω–µ –≤—ã–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏ —Ä–≤—ë—Ç—Å—è!"))
			to_chat(partner, span_userdanger(" –£–∑–µ–ª —Ä–µ–∑–∫–æ –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ç–µ–±—è!"))
			release_knot(user, partner, (knot_state ? knot_state : CUM_TARGET_VAGINA), TRUE)
			return

		// üîπ –ù–µ–±–æ–ª—å—à–æ–µ ¬´–ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏–µ¬ª –ø–∞—Ä—Ç–Ω—ë—Ä–∞
		if(prob(70))
			apply_tug_mob_to_mob(partner, user, 1)

	//  –ï—Å–ª–∏ —É—à–ª–∏ –¥–∞–ª—å—à–µ —á–µ–º –Ω–∞ 2 —Ç–∞–π–ª–∞ ‚Äî –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑—Ä—ã–≤
	else if(dist > 2)
		to_chat(user, span_danger(" –£–∑–µ–ª –Ω–µ –≤—ã–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏ —Ä–≤—ë—Ç—Å—è!"))
		to_chat(partner, span_userdanger(" –£–∑–µ–ª —Ä–µ–∑–∫–æ –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ç–µ–±—è!"))
		release_knot(user, partner, (knot_state ? knot_state : CUM_TARGET_VAGINA), TRUE)

		//  –ë–æ–ª—å –∏ —Ç—Ä–∞–≤–º–∞ –ø—Ä–∏ —Ä–∞–∑—Ä—ã–≤–µ
		user.apply_damage(rand(15, 25), STAMINA)
		user.apply_damage(rand(5, 10), BRUTE)
		partner.apply_damage(rand(10, 20), STAMINA)
		partner.apply_damage(rand(3, 6), BRUTE)

		to_chat(user, span_danger(" –¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Ä–µ–∑–∫—É—é –±–æ–ª—å ‚Äî —É–∑–µ–ª –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–∞—Ä—É–∂—É!"))
		to_chat(partner, span_danger(" –¢–≤–æ—è –ø–ª–æ—Ç—å –≥–æ—Ä–∏—Ç –±–æ–ª—å—é –æ—Ç —Ä–µ–∑–∫–æ–≥–æ —Ä–∞–∑—Ä—ã–≤–∞ —É–∑–ª–∞!"))
		if(prob(50))
			user.emote("scream")
		if(prob(25))
			partner.emote("moan")

// ============================================================
//  Grab-style Resist (–æ–±–∞ –º–æ–≥—É—Ç –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è)
// ============================================================

/obj/item/organ/genital/penis/proc/start_resist_attempt(mob/living/user)
	if(!knot_locked)
		to_chat(user, span_notice("–£–∑–µ–ª —É–∂–µ —Å–ø–∞–ª."))
		return

	var/mob/living/pen_owner   = owner
	var/mob/living/pen_partner = knot_partner
	if(!pen_owner || !pen_partner)
		to_chat(user, span_warning("–¶–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."))
		return

	//  –∞–Ω—Ç–∏—Å–ø–∞–º: –∞–∫—Ç–∏–≤–Ω—ã–π do_after?
	if(DOING_INTERACTION_WITH_TARGET(user, owner) || DOING_INTERACTION_WITH_TARGET(user, knot_partner))
		to_chat(user, span_warning("–¢—ã —É–∂–µ –ø—ã—Ç–∞–µ—à—å—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è ‚Äî –Ω–µ –¥—ë—Ä–≥–∞–π—Å—è!"))
		return

	//  –∞–Ω—Ç–∏—Å–ø–∞–º: –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—É–ª–¥–∞—É–Ω –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è (5 —Å–µ–∫—É–Ω–¥)
	if(world.time < user.knot_resist_cd_until)
		to_chat(user, span_warning("–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—ã—Ç–∞–ª—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è ‚Äî –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ..."))
		return
	user.knot_resist_cd_until = world.time + 50  // 5 SECONDS

	var/is_partner = (user == pen_partner)

	// —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –ø–æ–ø—ã—Ç–∫–∏
	var/msg_start
	if(is_partner)
		msg_start = "[user] –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–∑–≤–∏–≤–∞—Ç—å—Å—è, –ø—ã—Ç–∞—è—Å—å –≤—ã—Ç–æ–ª–∫–Ω—É—Ç—å —É–∑–µ–ª [pen_owner]."
	else
		msg_start = "[user] –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —É–∑–µ–ª –∏–∑ [pen_partner]."

	user.visible_message(
		span_notice(msg_start),
		span_notice("–¢—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –ø–æ–ø—ã—Ç–∫—É –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è –æ—Ç —É–∑–ª–∞...")
	)

	var/duration = is_partner ? 4 SECONDS : 3 SECONDS
	to_chat(user, span_warning("–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è... –ù–µ –¥–≤–∏–≥–∞–π—Å—è!"))

	// üî∏ —à–∞–Ω—Å –Ω–∞ –Ω–µ—É–¥–∞—á—É –ø–æ–ø—ã—Ç–∫–∏
	if(prob(35))
		to_chat(user, span_danger("–¢–µ–±–µ –Ω–µ —É–¥–∞—ë—Ç—Å—è –Ω–∞–π—Ç–∏ —É–¥–æ–±–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ..."))
		if(prob(40)) user.emote(pick("pant","whimper"))
		return

	// —Å–∞–º –ø—Ä–æ—Ü–µ—Å—Å
	if(!do_after(user, duration, target = is_partner ? pen_owner : pen_partner))
		to_chat(user, span_danger("–¢—ã –Ω–µ —Å–º–æ–≥ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è –æ—Ç —É–∑–ª–∞!"))
		if(prob(40)) user.emote(pick("scream","pant"))
		return

	// —É—Å–ø–µ—Ö ‚Äî –º—è–≥–∫–∏–π —Å–ø–∞–¥
	if(!knot_locked)
		to_chat(user, span_notice("–¢—ã —É–∂–µ —Å–≤–æ–±–æ–¥–µ–Ω."))
		return

	var/zone = knot_state ? knot_state : CUM_TARGET_VAGINA
	release_knot(pen_owner, pen_partner, zone, FALSE)

	if(is_partner)
		to_chat(user, span_love("–£–∑–µ–ª –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç, –ø—Ä–∏–Ω–æ—Å—è –æ–±–ª–µ–≥—á–µ–Ω–∏–µ."))
		if(prob(40)) user.emote(pick("moan","blush"))
		if(prob(20)) pen_owner.emote(pick("groan","pant"))
	else
		to_chat(user, span_love("–¢—ã –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ –ø–æ–º–æ–≥–∞–µ—à—å —É–∑–ª—É —Å–æ–π—Ç–∏."))
		if(prob(25)) user.emote(pick("sigh"))
		if(prob(25)) pen_partner.emote(pick("moan","blush"))

// ============================================================
// –í–µ—Ä–±: Resist Knot
// ============================================================

/mob/living/carbon/human/verb/knot_resist()
	set name = "Resist Knot"
	set category = "IC"
	set desc = "–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è –æ—Ç —É–∑–ª–∞ (–µ—Å–ª–∏ –∑–∞—Å—Ç—Ä—è–ª)."

	var/mob/living/carbon/human/H = src
	var/obj/item/organ/genital/penis/P = H.getorganslot(ORGAN_SLOT_PENIS)

	// –æ–±—â–∏–π –∫—É–ª–¥–∞—É–Ω –≤–µ—Ä–±–∞
	if(world.time < H.knot_resist_cd_until)
		to_chat(H, span_warning("–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—ã—Ç–∞–ª—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è ‚Äî –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ..."))
		return
	H.knot_resist_cd_until = world.time + 50  // 5 SECONDS

	if(P && P.knot_locked)
		// –∞–Ω—Ç–∏—Å–ø–∞–º –ø–æ –∞–∫—Ç–∏–≤–Ω–æ–º—É do_after
		if(DOING_INTERACTION_WITH_TARGET(H, P.owner) || DOING_INTERACTION_WITH_TARGET(H, P.knot_partner))
			to_chat(H, span_warning("–¢—ã —É–∂–µ –ø—ã—Ç–∞–µ—à—å—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è ‚Äî –Ω–µ –¥—ë—Ä–≥–∞–π—Å—è!"))
			return
		P.start_resist_attempt(H)
		return

	for(var/mob/living/carbon/human/other in view(1, H))
		if(other == H) continue
		var/obj/item/organ/genital/penis/P2 = other.getorganslot(ORGAN_SLOT_PENIS)
		if(P2 && P2.knot_locked && P2.knot_partner == H)
			if(DOING_INTERACTION_WITH_TARGET(H, other) || DOING_INTERACTION_WITH_TARGET(H, P2.owner))
				to_chat(H, span_warning("–¢—ã —É–∂–µ –ø—ã—Ç–∞–µ—à—å—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è ‚Äî –Ω–µ –¥—ë—Ä–≥–∞–π—Å—è!"))
				return
			P2.start_resist_attempt(H)
			return

	to_chat(H, span_notice("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É–∑–ª–∞ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏."))

/* // –û—Å—Ç–∞–≤–ª—é –Ω–∞ –ø–æ—Ç–æ–º (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–ª—è—Ç—å—Ü)
// ============================================================
// Verb: Try Knot (—Ä—É—á–Ω–æ–µ –∑–∞—É–∑–ª–∏–≤–∞–Ω–∏–µ)
// ============================================================

/mob/living/carbon/human/verb/knot_attempt()
	set name = "Try Knot"
	set category = "IC"
	set desc = "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞—É–∑–ª–∏—Ç—å —É–∑–µ–ª–æ–º –ø–∞—Ä—Ç–Ω—ë—Ä–∞ —Ä—è–¥–æ–º."

	var/mob/living/carbon/human/H = src

	// –∞–Ω—Ç–∏—Å–ø–∞–º / –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
	for(var/mob/living/L in view(1, H))
		if(DOING_INTERACTION_WITH_TARGET(H, L))
			to_chat(H, span_warning("–¢—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—à—å –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚Äî –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ."))
			return

	var/obj/item/organ/genital/penis/P = H.getorganslot(ORGAN_SLOT_PENIS)
	if(!P || P.knot_locked)
		to_chat(H, span_warning("–¢–≤–æ–π —É–∑–µ–ª –Ω–µ –≥–æ—Ç–æ–≤ –∏–ª–∏ —É–∂–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω."))
		return

	// –≤—ã–±–æ—Ä —Ü–µ–ª–∏ —Ä—è–¥–æ–º
	var/list/moblist = list()
	for(var/mob/living/carbon/human/M in view(1, H))
		if(M != H)
			moblist += M
	if(!length(moblist))
		to_chat(H, span_notice("–†—è–¥–æ–º –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ü–µ–ª–µ–π."))
		return

	var/mob/living/carbon/human/target = input(H, "–ö–æ–≥–æ –∑–∞—É–∑–ª–∏—Ç—å?", "Try Knot") as null|anything in moblist
	if(!target)
		return

	// –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–æ–Ω—ã
	var/list/L = list("–≤–ª–∞–≥–∞–ª–∏—â–µ" = CUM_TARGET_VAGINA, "–∞–Ω—É—Å" = CUM_TARGET_ANUS, "—Ä–æ—Ç" = CUM_TARGET_MOUTH)
	var/choice = input(H, "–ö—É–¥–∞ –∑–∞—É–∑–ª–∏—Ç—å?", "Try Knot") as null|anything in L
	if(!choice)
		return

	var/zone = L[choice]

	to_chat(H, span_notice("–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –∑–∞—É–∑–ª–∏—Ç—å [target]..."))
	if(do_after(H, 3 SECONDS, target = target))
		if(!P.knot_locked)
			P.do_knotting(H, target, zone)
	else
		to_chat(H, span_warning("–¢—ã –Ω–µ —Å–º–æ–≥ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –∑–∞—É–∑–ª–∏–≤–∞–Ω–∏—è."))
*/
/mob/living/carbon/human/resist()
	//  –£–∑–ª–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º Resist
	var/obj/item/organ/genital/penis/P = getorganslot(ORGAN_SLOT_PENIS)
	if(P && P.knot_locked)
		to_chat(src, span_love("–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è –æ—Ç —É–∑–ª–∞..."))
		P.start_resist_attempt(src)
		return

	// –ï—Å–ª–∏ —É –∫–æ–≥–æ-—Ç–æ —Ä—è–¥–æ–º —É–∑–µ–ª —Å —Ç–æ–±–æ–π
	for(var/mob/living/carbon/human/other in view(1, src))
		if(other == src) continue
		var/obj/item/organ/genital/penis/P2 = other.getorganslot(ORGAN_SLOT_PENIS)
		if(P2 && P2.knot_locked && P2.knot_partner == src)
			to_chat(src, span_love("–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –≤—ã—Ä–≤–∞—Ç—å—Å—è –∏–∑ —É–∑–ª–∞ [other]!"))
			P2.start_resist_attempt(src)
			return

	..()

// ============================================================
// üåê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—Ä–æ–∫: –ø–æ–ø—ã—Ç–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —É–∑–µ–ª –ø—Ä–∏ —Å–µ–∫—Å–µ
// ============================================================

/proc/try_apply_knot(mob/living/user, mob/living/partner, target_zone, force_override = FALSE)
	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤
	if(!ishuman(user) || !ishuman(partner))
		return

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ—Ñ–æ–≤
	if(!force_override)
		if(!user?.client?.prefs.sexknotting || !partner?.client?.prefs.sexknotting)
			return

	var/static/list/valid_orifices = list(
		CUM_TARGET_VAGINA,
		CUM_TARGET_ANUS,
		CUM_TARGET_MOUTH,
		CUM_TARGET_THROAT
	)

	if(!(target_zone in valid_orifices))
		return

	var/mob/living/carbon/human/initiator = user
	var/mob/living/carbon/human/receiver = partner
	var/obj/item/organ/genital/penis/P = null

	var/source = initiator.last_genital
	if(istype(source, /obj/item/organ/genital/penis))
		P = source
	else if(istype(receiver.last_genital, /obj/item/organ/genital/penis))
		P = receiver.last_genital
		var/tmp = initiator
		initiator = receiver
		receiver = tmp
	else
		return

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
	if(!P.knot_size || P.knot_locked)
		return

	// üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
	var/effective_lust = 0
	if(istype(initiator, /mob/living/carbon))
		var/mob/living/carbon/C = initiator
		if(hascall(C, "get_lust") && hascall(C, "get_climax_threshold"))
			var/max_lust = C.get_climax_threshold()
			if(max_lust > 0)
				effective_lust = (C.get_lust() / max_lust) * 100

	if(effective_lust < 65)
		return

	// üé≤ –®–∞–Ω—Å —É–∑–ª–∞
	var/chance = 10 + (P.knot_size * 10)
	if(effective_lust >= 80)
		chance += 10
	if(HAS_TRAIT(receiver, TRAIT_ESTROUS_ACTIVE))
		chance += 5

	chance = clamp(chance, 5, 60)

	if(prob(chance))
		if(P.do_knotting(initiator, receiver, target_zone))
			to_chat(initiator, span_love(" –¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —É–∑–µ–ª –Ω–∞–±—É—Ö–∞–µ—Ç –≤–Ω—É—Ç—Ä–∏ [receiver]!"))
			to_chat(receiver, span_love(" –¢—ã –æ—â—É—â–∞–µ—à—å, –∫–∞–∫ —É–∑–µ–ª [initiator] –∑–∞—Å—Ç—Ä–µ–≤–∞–µ—Ç –≤–Ω—É—Ç—Ä–∏!"))
			GLOB.knottings++
